"""Create all missing tables

Revision ID: 7c821a97d0bb
Revises: 
Create Date: 2025-10-16 10:55:55.785304+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7c821a97d0bb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('semesters',
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('FALL', 'SPRING', 'SUMMER', name='semestertype'), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('registration_start', sa.Date(), nullable=True),
    sa.Column('registration_end', sa.Date(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_semesters_id'), 'semesters', ['id'], unique=False)
    op.create_index(op.f('ix_semesters_is_current'), 'semesters', ['is_current'], unique=False)
    op.create_table('student_sequences',
    sa.Column('major_code', sa.String(length=3), nullable=False),
    sa.Column('campus_code', sa.String(length=3), nullable=False),
    sa.Column('year_entered', sa.Integer(), nullable=False),
    sa.Column('last_sequence', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_sequences_id'), 'student_sequences', ['id'], unique=False)
    op.create_table('username_sequences',
    sa.Column('base_username', sa.String(length=20), nullable=False),
    sa.Column('user_type', sa.String(length=20), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_username_sequences_id'), 'username_sequences', ['id'], unique=False)
    op.create_table('courses',
    sa.Column('course_code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=False),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('prerequisites', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_course_code'), 'courses', ['course_code'], unique=True)
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_index(op.f('ix_courses_major_id'), 'courses', ['major_id'], unique=False)
    op.create_table('announcements',
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('summary', sa.String(length=500), nullable=True),
    sa.Column('campus_id', sa.Integer(), nullable=True),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.Column('audience', sa.String(length=50), nullable=True),
    sa.Column('category', sa.Enum('NEWS', 'ACADEMIC', 'EVENT', 'URGENT', 'MAINTENANCE', name='announcementcategory'), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='priority'), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('publish_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expire_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['campus_id'], ['campuses.id'], ),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcements_campus_id'), 'announcements', ['campus_id'], unique=False)
    op.create_index(op.f('ix_announcements_category'), 'announcements', ['category'], unique=False)
    op.create_index(op.f('ix_announcements_id'), 'announcements', ['id'], unique=False)
    op.create_index(op.f('ix_announcements_is_pinned'), 'announcements', ['is_pinned'], unique=False)
    op.create_index(op.f('ix_announcements_is_published'), 'announcements', ['is_published'], unique=False)
    op.create_index(op.f('ix_announcements_publish_at'), 'announcements', ['publish_at'], unique=False)
    op.create_table('course_sections',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('section_number', sa.String(length=10), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.Column('campus_id', sa.Integer(), nullable=False),
    sa.Column('room', sa.String(length=50), nullable=True),
    sa.Column('building', sa.String(length=100), nullable=True),
    sa.Column('max_students', sa.Integer(), nullable=True),
    sa.Column('enrolled_count', sa.Integer(), nullable=True),
    sa.Column('syllabus_url', sa.String(length=500), nullable=True),
    sa.Column('meeting_link', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'CANCELLED', 'COMPLETED', name='sectionstatus'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('enrolled_count <= max_students', name='chk_enrollment_capacity'),
    sa.ForeignKeyConstraint(['campus_id'], ['campuses.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'semester_id', 'section_number', 'campus_id', name='uq_section')
    )
    op.create_index(op.f('ix_course_sections_campus_id'), 'course_sections', ['campus_id'], unique=False)
    op.create_index(op.f('ix_course_sections_course_id'), 'course_sections', ['course_id'], unique=False)
    op.create_index(op.f('ix_course_sections_id'), 'course_sections', ['id'], unique=False)
    op.create_index(op.f('ix_course_sections_instructor_id'), 'course_sections', ['instructor_id'], unique=False)
    op.create_index(op.f('ix_course_sections_semester_id'), 'course_sections', ['semester_id'], unique=False)
    op.create_index(op.f('ix_course_sections_status'), 'course_sections', ['status'], unique=False)
    op.create_table('device_tokens',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('platform', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_device_tokens_id'), 'device_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_device_tokens_user_id'), 'device_tokens', ['user_id'], unique=False)
    op.create_table('document_requests',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.Enum('TRANSCRIPT', 'CERTIFICATE', 'ENROLLMENT_LETTER', 'RECOMMENDATION_LETTER', name='documentrequesttype'), nullable=False),
    sa.Column('purpose', sa.Text(), nullable=True),
    sa.Column('copies_requested', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'READY', 'DELIVERED', 'REJECTED', name='documentrequeststatus'), nullable=True),
    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_by', sa.Integer(), nullable=True),
    sa.Column('ready_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivery_method', sa.Enum('PICKUP', 'EMAIL', 'POSTAL_MAIL', name='deliverymethod'), nullable=True),
    sa.Column('delivery_address', sa.Text(), nullable=True),
    sa.Column('tracking_number', sa.String(length=100), nullable=True),
    sa.Column('fee_amount', sa.Integer(), nullable=True),
    sa.Column('fee_paid', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['processed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_requests_document_type'), 'document_requests', ['document_type'], unique=False)
    op.create_index(op.f('ix_document_requests_id'), 'document_requests', ['id'], unique=False)
    op.create_index(op.f('ix_document_requests_status'), 'document_requests', ['status'], unique=False)
    op.create_index(op.f('ix_document_requests_student_id'), 'document_requests', ['student_id'], unique=False)
    op.create_table('fee_structures',
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('campus_id', sa.Integer(), nullable=True),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.Column('semester_id', sa.Integer(), nullable=True),
    sa.Column('tuition_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('lab_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('library_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('registration_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('other_fees', sa.Text(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=True),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['campus_id'], ['campuses.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_fee_structures_id'), 'fee_structures', ['id'], unique=False)
    op.create_table('invoices',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('semester_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PARTIAL', 'PAID', 'OVERDUE', 'CANCELLED', name='invoicestatus'), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_due_date'), 'invoices', ['due_date'], unique=False)
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_index(op.f('ix_invoices_invoice_number'), 'invoices', ['invoice_number'], unique=True)
    op.create_index(op.f('ix_invoices_semester_id'), 'invoices', ['semester_id'], unique=False)
    op.create_index(op.f('ix_invoices_status'), 'invoices', ['status'], unique=False)
    op.create_index(op.f('ix_invoices_student_id'), 'invoices', ['student_id'], unique=False)
    op.create_table('support_tickets',
    sa.Column('ticket_number', sa.String(length=20), nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('ACADEMIC', 'TECHNICAL', 'DOCUMENT', 'FINANCIAL', 'OTHER', name='ticketcategory'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='ticketpriority'), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', name='ticketstatus'), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sla_due_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_support_tickets_assigned_to'), 'support_tickets', ['assigned_to'], unique=False)
    op.create_index(op.f('ix_support_tickets_category'), 'support_tickets', ['category'], unique=False)
    op.create_index(op.f('ix_support_tickets_id'), 'support_tickets', ['id'], unique=False)
    op.create_index(op.f('ix_support_tickets_priority'), 'support_tickets', ['priority'], unique=False)
    op.create_index(op.f('ix_support_tickets_requester_id'), 'support_tickets', ['requester_id'], unique=False)
    op.create_index(op.f('ix_support_tickets_status'), 'support_tickets', ['status'], unique=False)
    op.create_index(op.f('ix_support_tickets_ticket_number'), 'support_tickets', ['ticket_number'], unique=True)
    op.create_table('assignments',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('HOMEWORK', 'QUIZ', 'MIDTERM', 'FINAL', 'PROJECT', name='assignmenttype'), nullable=False),
    sa.Column('max_points', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('weight_percent', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('late_submission_allowed', sa.Boolean(), nullable=True),
    sa.Column('late_penalty_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('submission_type', sa.String(length=50), nullable=True),
    sa.Column('attachment_url', sa.String(length=500), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('weight_percent >= 0 AND weight_percent <= 100', name='chk_weight_percent'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assignments_due_date'), 'assignments', ['due_date'], unique=False)
    op.create_index(op.f('ix_assignments_id'), 'assignments', ['id'], unique=False)
    op.create_index(op.f('ix_assignments_is_published'), 'assignments', ['is_published'], unique=False)
    op.create_index(op.f('ix_assignments_section_id'), 'assignments', ['section_id'], unique=False)
    op.create_table('attendance',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('attendance_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PRESENT', 'ABSENT', 'LATE', 'EXCUSED', name='attendancestatus'), nullable=False),
    sa.Column('marked_by', sa.Integer(), nullable=True),
    sa.Column('marked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['marked_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['course_sections.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('section_id', 'student_id', 'attendance_date', name='uq_attendance')
    )
    op.create_index(op.f('ix_attendance_attendance_date'), 'attendance', ['attendance_date'], unique=False)
    op.create_index(op.f('ix_attendance_id'), 'attendance', ['id'], unique=False)
    op.create_index(op.f('ix_attendance_section_id'), 'attendance', ['section_id'], unique=False)
    op.create_index(op.f('ix_attendance_status'), 'attendance', ['status'], unique=False)
    op.create_index(op.f('ix_attendance_student_id'), 'attendance', ['student_id'], unique=False)
    op.create_table('chat_rooms',
    sa.Column('firebase_room_id', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('COURSE', 'DIRECT', 'GROUP', 'AI_SUPPORT', name='roomtype'), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('campus_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('last_message_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['campus_id'], ['campuses.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_rooms_firebase_room_id'), 'chat_rooms', ['firebase_room_id'], unique=True)
    op.create_index(op.f('ix_chat_rooms_id'), 'chat_rooms', ['id'], unique=False)
    op.create_index(op.f('ix_chat_rooms_section_id'), 'chat_rooms', ['section_id'], unique=False)
    op.create_index(op.f('ix_chat_rooms_type'), 'chat_rooms', ['type'], unique=False)
    op.create_table('documents',
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('category', sa.Enum('SYLLABUS', 'ASSIGNMENT', 'LECTURE_NOTE', 'TRANSCRIPT', 'CERTIFICATE', 'OTHER', name='documentcategory'), nullable=True),
    sa.Column('visibility', sa.Enum('PUBLIC', 'PRIVATE', 'RESTRICTED', name='documentvisibility'), nullable=True),
    sa.Column('campus_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['campus_id'], ['campuses.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_category'), 'documents', ['category'], unique=False)
    op.create_index(op.f('ix_documents_file_hash'), 'documents', ['file_hash'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_owner_id'), 'documents', ['owner_id'], unique=False)
    op.create_index(op.f('ix_documents_section_id'), 'documents', ['section_id'], unique=False)
    op.create_table('enrollments',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ENROLLED', 'DROPPED', 'WITHDRAWN', 'COMPLETED', name='enrollmentstatus'), nullable=True),
    sa.Column('enrolled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dropped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('final_grade', sa.String(length=5), nullable=True),
    sa.Column('grade_points', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('credits_earned', sa.Integer(), nullable=True),
    sa.Column('midterm_grade', sa.String(length=5), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['course_sections.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'section_id', name='uq_student_section')
    )
    op.create_index(op.f('ix_enrollments_id'), 'enrollments', ['id'], unique=False)
    op.create_index(op.f('ix_enrollments_section_id'), 'enrollments', ['section_id'], unique=False)
    op.create_index(op.f('ix_enrollments_status'), 'enrollments', ['status'], unique=False)
    op.create_index(op.f('ix_enrollments_student_id'), 'enrollments', ['student_id'], unique=False)
    op.create_table('invoice_lines',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('fee_structure_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('line_order', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fee_structure_id'], ['fee_structures.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoice_lines_id'), 'invoice_lines', ['id'], unique=False)
    op.create_index(op.f('ix_invoice_lines_invoice_id'), 'invoice_lines', ['invoice_id'], unique=False)
    op.create_table('payments',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'BANK_TRANSFER', 'CREDIT_CARD', 'MOMO', 'VNPAY', name='paymentmethod'), nullable=False),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_by', sa.Integer(), nullable=True),
    sa.Column('receipt_number', sa.String(length=50), nullable=True),
    sa.Column('receipt_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['processed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_number')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_invoice_id'), 'payments', ['invoice_id'], unique=False)
    op.create_index(op.f('ix_payments_paid_at'), 'payments', ['paid_at'], unique=False)
    op.create_index(op.f('ix_payments_reference_number'), 'payments', ['reference_number'], unique=False)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    op.create_table('schedules',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('room', sa.String(length=50), nullable=True),
    sa.Column('building', sa.String(length=100), nullable=True),
    sa.Column('session_type', sa.String(length=20), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=True),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('recurrence_pattern', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('day_of_week BETWEEN 1 AND 7', name='chk_day_of_week'),
    sa.CheckConstraint('end_time > start_time', name='chk_time_order'),
    sa.ForeignKeyConstraint(['section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.create_index(op.f('ix_schedules_section_id'), 'schedules', ['section_id'], unique=False)
    op.create_table('ticket_events',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Enum('CREATED', 'STATUS_CHANGE', 'ASSIGNMENT', 'COMMENT', 'RESOLUTION', name='eventtype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('old_value', sa.String(length=200), nullable=True),
    sa.Column('new_value', sa.String(length=200), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['support_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ticket_events_event_type'), 'ticket_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_ticket_events_id'), 'ticket_events', ['id'], unique=False)
    op.create_index(op.f('ix_ticket_events_ticket_id'), 'ticket_events', ['ticket_id'], unique=False)
    op.create_table('chat_participants',
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MODERATOR', 'MEMBER', name='participantrole'), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_muted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['chat_rooms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('room_id', 'user_id', name='uq_room_user')
    )
    op.create_index(op.f('ix_chat_participants_id'), 'chat_participants', ['id'], unique=False)
    op.create_index(op.f('ix_chat_participants_room_id'), 'chat_participants', ['room_id'], unique=False)
    op.create_index(op.f('ix_chat_participants_user_id'), 'chat_participants', ['user_id'], unique=False)
    op.create_table('grades',
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('points_earned', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('max_points', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submission_url', sa.String(length=500), nullable=True),
    sa.Column('submission_text', sa.Text(), nullable=True),
    sa.Column('is_late', sa.Boolean(), nullable=True),
    sa.Column('late_days', sa.Integer(), nullable=True),
    sa.Column('graded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('graded_by', sa.Integer(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'GRADED', 'RETURNED', name='gradestatus'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.ForeignKeyConstraint(['graded_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('assignment_id', 'student_id', name='uq_assignment_student')
    )
    op.create_index(op.f('ix_grades_assignment_id'), 'grades', ['assignment_id'], unique=False)
    op.create_index(op.f('ix_grades_id'), 'grades', ['id'], unique=False)
    op.create_index(op.f('ix_grades_status'), 'grades', ['status'], unique=False)
    op.create_index(op.f('ix_grades_student_id'), 'grades', ['student_id'], unique=False)
    op.alter_column('campuses', 'timezone',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_nullable=True)
    op.alter_column('campuses', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('campuses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('campuses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_campuses_id'), 'campuses', ['id'], unique=False)
    op.alter_column('majors', 'code',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=3),
               existing_nullable=False)
    op.alter_column('majors', 'name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('majors', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.alter_column('majors', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('majors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('majors', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_majors_id'), 'majors', ['id'], unique=False)
    op.alter_column('users', 'status',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_users_campus', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_major', table_name='users')
    op.drop_index('idx_users_role', table_name='users')
    op.drop_index('idx_users_status', table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_firebase_uid_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_campus_id'), 'users', ['campus_id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_firebase_uid'), 'users', ['firebase_uid'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_major_id'), 'users', ['major_id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_foreign_key(None, 'users', 'campuses', ['campus_id'], ['id'])
    op.create_foreign_key(None, 'users', 'majors', ['major_id'], ['id'])
    op.drop_column('users', 'gender')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('gender', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_major_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_firebase_uid'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_campus_id'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_firebase_uid_key', 'users', ['firebase_uid'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index('idx_users_status', 'users', ['status'], unique=False)
    op.create_index('idx_users_role', 'users', ['role'], unique=False)
    op.create_index('idx_users_major', 'users', ['major_id'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_campus', 'users', ['campus_id'], unique=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'status',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'active'::character varying"),
               existing_nullable=True)
    op.drop_index(op.f('ix_majors_id'), table_name='majors')
    op.alter_column('majors', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('majors', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('majors', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=True)
    op.alter_column('majors', 'description',
               existing_type=sa.String(length=1000),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('majors', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
    op.alter_column('majors', 'code',
               existing_type=sa.String(length=3),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    op.drop_index(op.f('ix_campuses_id'), table_name='campuses')
    op.alter_column('campuses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('campuses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('campuses', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=True)
    op.alter_column('campuses', 'timezone',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'Asia/Ho_Chi_Minh'::character varying"),
               existing_nullable=True)
    op.drop_index(op.f('ix_grades_student_id'), table_name='grades')
    op.drop_index(op.f('ix_grades_status'), table_name='grades')
    op.drop_index(op.f('ix_grades_id'), table_name='grades')
    op.drop_index(op.f('ix_grades_assignment_id'), table_name='grades')
    op.drop_table('grades')
    op.drop_index(op.f('ix_chat_participants_user_id'), table_name='chat_participants')
    op.drop_index(op.f('ix_chat_participants_room_id'), table_name='chat_participants')
    op.drop_index(op.f('ix_chat_participants_id'), table_name='chat_participants')
    op.drop_table('chat_participants')
    op.drop_index(op.f('ix_ticket_events_ticket_id'), table_name='ticket_events')
    op.drop_index(op.f('ix_ticket_events_id'), table_name='ticket_events')
    op.drop_index(op.f('ix_ticket_events_event_type'), table_name='ticket_events')
    op.drop_table('ticket_events')
    op.drop_index(op.f('ix_schedules_section_id'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_reference_number'), table_name='payments')
    op.drop_index(op.f('ix_payments_paid_at'), table_name='payments')
    op.drop_index(op.f('ix_payments_invoice_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_invoice_lines_invoice_id'), table_name='invoice_lines')
    op.drop_index(op.f('ix_invoice_lines_id'), table_name='invoice_lines')
    op.drop_table('invoice_lines')
    op.drop_index(op.f('ix_enrollments_student_id'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_status'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_section_id'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_id'), table_name='enrollments')
    op.drop_table('enrollments')
    op.drop_index(op.f('ix_documents_section_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_owner_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_file_hash'), table_name='documents')
    op.drop_index(op.f('ix_documents_category'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chat_rooms_type'), table_name='chat_rooms')
    op.drop_index(op.f('ix_chat_rooms_section_id'), table_name='chat_rooms')
    op.drop_index(op.f('ix_chat_rooms_id'), table_name='chat_rooms')
    op.drop_index(op.f('ix_chat_rooms_firebase_room_id'), table_name='chat_rooms')
    op.drop_table('chat_rooms')
    op.drop_index(op.f('ix_attendance_student_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_status'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_section_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_attendance_date'), table_name='attendance')
    op.drop_table('attendance')
    op.drop_index(op.f('ix_assignments_section_id'), table_name='assignments')
    op.drop_index(op.f('ix_assignments_is_published'), table_name='assignments')
    op.drop_index(op.f('ix_assignments_id'), table_name='assignments')
    op.drop_index(op.f('ix_assignments_due_date'), table_name='assignments')
    op.drop_table('assignments')
    op.drop_index(op.f('ix_support_tickets_ticket_number'), table_name='support_tickets')
    op.drop_index(op.f('ix_support_tickets_status'), table_name='support_tickets')
    op.drop_index(op.f('ix_support_tickets_requester_id'), table_name='support_tickets')
    op.drop_index(op.f('ix_support_tickets_priority'), table_name='support_tickets')
    op.drop_index(op.f('ix_support_tickets_id'), table_name='support_tickets')
    op.drop_index(op.f('ix_support_tickets_category'), table_name='support_tickets')
    op.drop_index(op.f('ix_support_tickets_assigned_to'), table_name='support_tickets')
    op.drop_table('support_tickets')
    op.drop_index(op.f('ix_invoices_student_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_status'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_semester_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_invoice_number'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_due_date'), table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_fee_structures_id'), table_name='fee_structures')
    op.drop_table('fee_structures')
    op.drop_index(op.f('ix_document_requests_student_id'), table_name='document_requests')
    op.drop_index(op.f('ix_document_requests_status'), table_name='document_requests')
    op.drop_index(op.f('ix_document_requests_id'), table_name='document_requests')
    op.drop_index(op.f('ix_document_requests_document_type'), table_name='document_requests')
    op.drop_table('document_requests')
    op.drop_index(op.f('ix_device_tokens_user_id'), table_name='device_tokens')
    op.drop_index(op.f('ix_device_tokens_id'), table_name='device_tokens')
    op.drop_table('device_tokens')
    op.drop_index(op.f('ix_course_sections_status'), table_name='course_sections')
    op.drop_index(op.f('ix_course_sections_semester_id'), table_name='course_sections')
    op.drop_index(op.f('ix_course_sections_instructor_id'), table_name='course_sections')
    op.drop_index(op.f('ix_course_sections_id'), table_name='course_sections')
    op.drop_index(op.f('ix_course_sections_course_id'), table_name='course_sections')
    op.drop_index(op.f('ix_course_sections_campus_id'), table_name='course_sections')
    op.drop_table('course_sections')
    op.drop_index(op.f('ix_announcements_publish_at'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_is_published'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_is_pinned'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_id'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_category'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_campus_id'), table_name='announcements')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_courses_major_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_course_code'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_username_sequences_id'), table_name='username_sequences')
    op.drop_table('username_sequences')
    op.drop_index(op.f('ix_student_sequences_id'), table_name='student_sequences')
    op.drop_table('student_sequences')
    op.drop_index(op.f('ix_semesters_is_current'), table_name='semesters')
    op.drop_index(op.f('ix_semesters_id'), table_name='semesters')
    op.drop_table('semesters')
    # ### end Alembic commands ###
